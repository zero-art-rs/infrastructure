services:
  mongodb:
    image: mongo:7.0
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - 27017:27017
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongodb:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - "mongodb_data:/data/db"
      - "mongodb_config:/data/configdb"
    networks:
      - centrifugo-network

  zk-messenger-node:
    image: ghcr.io/zk-messenger/zk-messenger-node:v0.1.3
    container_name: zk-messenger-node
    ports:
      - "8080:8080"
    volumes:
      - ./configs/node.toml:/config.toml:ro
    depends_on:
      mongodb:
        condition: service_healthy
      nats-stream-init:
        condition: service_completed_successfully
    networks:
      - centrifugo-network
    restart: unless-stopped
    environment:
      - RUST_LOG=debug

  zk-messenger-message-relay:
    image: ghcr.io/zk-messenger/message-relay:v0.1.1
    container_name: zk-messenger-message-relay
    ports:
      - "8081:8081"
    volumes:
      - ./configs/relay.toml:/config.toml:ro
    depends_on:
      mongodb:
        condition: service_healthy
      nats-stream-init:
        condition: service_completed_successfully
    networks:
      - centrifugo-network
    restart: unless-stopped
    environment:
      - RUST_LOG=debug

  nats:
    image: nats:latest
    container_name: nats-server
    ports:
      - "4222:4222"
      - "6222:6222"
      - "8222:8222"
    command: ["-js", "-sd", "/data", "-m", "8222"]
    volumes:
      - nats_data:/data
    networks:
      - centrifugo-network
    restart: unless-stopped

  nats-stream-init:
    image: natsio/nats-box:latest
    container_name: nats-stream-init
    depends_on:
      - nats
    networks:
      - centrifugo-network
    command:
      - sh
      - -c
      - |
        echo 'Waiting for NATS to be ready...'
        while ! nats server check connection --server=nats://nats:4222 2>/dev/null; do
          echo 'NATS not ready, waiting...'
          sleep 2
        done
        echo 'NATS is ready! Creating EVENTS stream...'
        nats stream add EVENTS --subjects 'events.>' --storage file --retention limits --max-msgs=-1 --max-bytes=-1 --max-age='' --max-msg-size=-1 --dupe-window=2m --replicas=1 --server=nats://nats:4222 --defaults
        echo 'EVENTS stream created successfully!'
    restart: "no"

  centrifugo:
    image: centrifugo/centrifugo:v6.2.1
    container_name: centrifugo-server
    ports:
      - "8000:8000"
    volumes:
      - ./configs/centrifugo.json:/centrifugo/config.json:ro
    command: centrifugo -c config.json
    depends_on:
      nats-stream-init:
        condition: service_completed_successfully
    networks:
      - centrifugo-network
    restart: unless-stopped
    environment:
      - CENTRIFUGO_LOG_LEVEL=debug

  nginx:
    image: nginx:alpine
    container_name: nginx-gateway
    ports:
      - "80:80"
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - zk-messenger-node
      - centrifugo
    networks:
      - centrifugo-network
    restart: unless-stopped

volumes:
  nats_data:
    driver: local
  mongodb_config:
  mongodb_data:

networks:
  centrifugo-network:
    driver: bridge
